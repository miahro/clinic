# Generated by Django 4.1.2 on 2022-10-28 12:02

from django.db import migrations
from .. import backend

def populate(apps, schema_editor):
	p1, created = Patients.objects.get_or_create(
		firstname=backend.encrypt("Sandy"),
		lastname=backend.encrypt("Sick"))

	p2, created = Patients.objects.get_or_create(
		firstname=backend.encrypt("Pat"),
		lastname=backend.encrypt("Patient"))

	p3, created = Patients.objects.get_or_create(
		firstname=backend.encrypt("Ian"),
		lastname=backend.encrytp("Ill"))

	d1, created = Diagnoses.objects.get_or_create(description="Diarhea")
	d2, created = Diagnoses.objects.get_or_create(description="Drug abuse problem")
	d3, created = Diagnoses.objects.get_or_create(description="COVID-19")
	f1, created = Financial.objects.get_or_create(creditcard=backend.encrypt("Amex1234"), person=p1)
	f2, created = Financial.objects.get_or_create(creditcard=backend.encrypt("MasterCard1234"), person=p2)
	f3, created = Financial.objects.get_or_create(creditcard=backend.encrypt("Diners1234"), person=p3)
	m1, created = Medicaldata.objects.get_or_create(diagnose=d1, person=p2)
	m2, created = Medicaldata.objects.get_or_create(diagnose=d2, person=p3)
	m3, created = Medicaldata.objects.get_or_create(diagnose=d3, person=p1)
	m4, created = Medicaldata.objects.get_or_create(diagnose=d2, person=p1)
	m5, created = Medicaldata.objects.get_or_create(diagnose=d1, person=p1)

	user = User.objects.filter(username="adm")
	if not user.exists():
		newuser=User.objects.create_user(username="adm", first_name="Adam", last_name="Administrator", password="12345")
		myuser = MyUser.objects.create(user=newuser, clinic_staff=True)
		myuser.save()
	user2 = User.objects.filter(username="doc")
	if not user2.exists():
			newuser2 = User.objects.create_user(username="doc", first_name="Danielle", last_name="Doctor", password="12345")
			myuser2 = MyUser.objects.create(user=newuser2, clinic_staff=True)
			myuser2.save()
	user3 = User.objects.filter(username="maint")
	if not user3.exists():
			newuser3 = User.objects.create_user(username="maint", first_name="Mike", last_name="Maintence", password="12345")
			myuser3 = MyUser.objects.create(user=newuser3, clinic_staff=False)
			myuser3.save()
		

class Migration(migrations.Migration):

    dependencies = [
        ("clinic", "0014_rename_personid_financial_person_and_more"),
    ]

    operations = [
    ]


